---
import GithubIcon from "../assets/icon-github.svg";
import RSSIcon from "../assets/icon-rss.svg";
import SunIcon from "../assets/icon-sun.svg";
import MoonIcon from "../assets/icon-moon-stars.svg";
import MenuIcon from "../assets/icon-menu.svg";

const navLinks = [
  { href: "/articles", label: "文章列表" },
  { href: "/categories", label: "分類" },
  { href: "/about", label: "關於我" },
];

const actionButtons = [
  {
    href: "https://github.com/yourusername",
    label: "GitHub",
    external: true,
    icon: GithubIcon,
  },
  {
    href: "/rss.xml",
    label: "RSS",
    external: false,
    icon: RSSIcon,
  },
];
---

<div class="drawer sticky top-0 z-50">
  <input id="my-drawer" type="checkbox" class="drawer-toggle" />
  <div class="drawer-content">
    <div class="w-full bg-base-200">
      <div class="container mx-auto">
        <div class="navbar min-h-0 h-14">
          <div class="navbar-start">
            <h1>
              <a href="/" class="p-2 md:px-0 text-xl font-bold">Pen's pulse</a>
            </h1>
          </div>
          <div class="navbar-center hidden md:flex">
            <ul class="menu menu-horizontal px-1">
              {
                navLinks.map((link) => (
                  <li>
                    <a href={link.href} class="link link-hover">
                      {link.label}
                    </a>
                  </li>
                ))
              }
            </ul>
          </div>
          <div class="navbar-end">
            <div class="gap-2 hidden md:flex">
              {
                actionButtons.map((button) => (
                  <a
                    href={button.href}
                    target={button.external ? "_blank" : undefined}
                    class="btn btn-ghost btn-square"
                    aria-label={button.label}
                    title={button.label}
                  >
                    <button.icon width={20} height={20} />
                  </a>
                ))
              }
              <button
                id="theme-toggle"
                class="btn btn-ghost btn-square group"
                aria-label="主題切換"
                title="主題切換"
              >
                <SunIcon
                  width={20}
                  height={20}
                  class="sun-icon light-icon"
                  fill="#F9A825"
                />
                <MoonIcon
                  width={20}
                  height={20}
                  class="moon-icon dark-icon hidden"
                  fill="#F9A825"
                />
              </button>
            </div>
            <label
              for="my-drawer"
              class="btn btn-ghost drawer-button md:hidden"
            >
              <MenuIcon class="h-5 w-5" />
            </label>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- 行動版 Menu -->
  <div class="drawer-side z-50">
    <label for="my-drawer" aria-label="close sidebar" class="drawer-overlay"
    ></label>
    <ul class="menu p-4 w-80 min-h-full bg-base-200 text-base-content text-lg">
      {
        navLinks.map((link) => (
          <li>
            <a href={link.href} class="text-[18px] link link-hover">
              {link.label}
            </a>
          </li>
        ))
      }

      <div class="divider my-1"></div>

      {
        actionButtons.map((button) => (
          <li>
            <a
              href={button.href}
              target={button.external ? "_blank" : undefined}
              class="text-[18px] flex items-center gap-4"
            >
              <button.icon width={20} height={20} />
              {button.label}
            </a>
          </li>
        ))
      }
      <li>
        <a id="theme-toggle-mobile" class="text-[18px] flex items-center gap-4">
          <SunIcon
            width={20}
            height={20}
            class="sun-icon light-icon-mobile"
            fill="#F9A825"
          />
          <MoonIcon
            width={20}
            height={20}
            class="moon-icon dark-icon-mobile hidden"
            fill="#F9A825"
          />
          切換主題
        </a>
      </li>
    </ul>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const themeToggle = document.getElementById("theme-toggle");
    const themeToggleMobile = document.getElementById("theme-toggle-mobile");
    const lightIcons = document.querySelectorAll(
      ".light-icon, .light-icon-mobile"
    );
    const darkIcons = document.querySelectorAll(
      ".dark-icon, .dark-icon-mobile"
    );

    // 從 localStorage 獲取主題設定或使用系統偏好
    const savedTheme =
      localStorage.getItem("theme") ||
      (window.matchMedia("(prefers-color-scheme: dark)").matches
        ? "dark"
        : "light");

    document.documentElement.setAttribute("data-theme", savedTheme);

    // 根據當前主題顯示對應的 icon
    function updateThemeIcons(theme: string) {
      lightIcons.forEach((icon) =>
        icon.classList.toggle("hidden", theme === "dark")
      );
      darkIcons.forEach((icon) =>
        icon.classList.toggle("hidden", theme === "light")
      );
    }

    updateThemeIcons(savedTheme);

    function toggleTheme() {
      const currentTheme = document.documentElement.getAttribute("data-theme");
      const newTheme = currentTheme === "dark" ? "light" : "dark";

      document.documentElement.setAttribute("data-theme", newTheme);
      localStorage.setItem("theme", newTheme);
      updateThemeIcons(newTheme);
    }

    // 綁定事件
    if (themeToggle) {
      themeToggle.addEventListener("click", toggleTheme);
    }
    if (themeToggleMobile) {
      themeToggleMobile.addEventListener("click", toggleTheme);
    }
  });
</script>
